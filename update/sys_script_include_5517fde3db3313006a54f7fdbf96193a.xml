<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_53373_royalapi.royaleAPIClanExtract</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>royaleAPIClanExtract</name>
        <script><![CDATA[var royaleAPIClanExtract = Class.create();
royaleAPIClanExtract.prototype = {
	initialize: function() {
		this.currentMembers = [];
		this.currentMembers2 = [];
		this.initialGet = false ;
	},
	
	get: function(){
		try {
			// x_53373_royalapi_clan_donations
			var r = new sn_ws.RESTMessageV2('x_53373_royalapi.RoyalAPI', 'Default GET');
			
			var gdt = new GlideDateTime();
			var dayOfWeek = gdt.getDayOfWeekUTC() - 1;
			gdt.addSeconds( -dayOfWeek * 86400);
			
			//var weekBeginning = new GlideDateTime();
			//weekBeginning.setValue(gdt.getValue().split(' ')[0] +  " 00:00:00");
			weekBeginning = gdt.getValue().split(' ')[0];
			
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			gs.info('CCK:SI:royaleAPIClanExtract:httpStatus = ' + httpStatus);
			if ( httpStatus == '200'){
				this.initialGet = true ;
				var responseJSON = JSON.parse(responseBody);
				var members = responseJSON.members;
				gs.info("CCK:SI:royaleAPIClanExtract: members = " + members.length);
				for ( var i = 0 ; i < members.length ; i++ ) {
					
					// Create an array of current members
					this.currentMembers.push("tag!=" + members[i].tag.toString());
					this.currentMembers2.push("name.tag!=" + members[i].tag.toString());
					
					// Create the clan_member record if required
					var clanMemberGr = new GlideRecord('x_53373_royalapi_clan_member');
					clanMemberGr.addEncodedQuery('tag=' + members[i].tag.toString());
					clanMemberGr.query();
					var clanMemberSysId = '';
					if ( clanMemberGr.next() ){
						clanMemberGr.active = true;
						clanMemberGr.update();
						clanMemberSysId = clanMemberGr.sys_id;
					} else {
						var newClanMemberGr = new GlideRecord('x_53373_royalapi_clan_member');
						newClanMemberGr.name = members[i].name.toString();
						newClanMemberGr.tag = members[i].tag.toString();
						clanMemberSysId = newClanMemberGr.insert();
					}
					
					// gs.debug('searching for ' + members[i].tag.toString());
					// create the donations record - x_53373_royalapi_clan_donations
					var donationGR = new GlideRecord('x_53373_royalapi_clan_donations');
					//gs.debug("name.name=" + members[i].tag.toString() + "^week_beginning=" + weekBeginning);
					donationGR.addEncodedQuery("name.tag=" + members[i].tag.toString() + "^week_beginning=" + weekBeginning);
					donationGR.query();
					var donationRecSysId = '';
					if ( donationGR.next()){
						donationRecSysId = donationGR.sys_id;
					} else {
						// get the sys id of the member record
						var clanMemberGr2 = new GlideRecord('x_53373_royalapi_clan_member');
						clanMemberGr2.get(clanMemberSysId);
						//gs.debug(clanMemberSysId);
						// Create the new record						
						var newDonationGR = new GlideRecord('x_53373_royalapi_clan_donations');
						newDonationGR.name = clanMemberGr2.sys_id.toString();
						//newDonationGR.tag = members[i].tag.toString();
						donationRecSysId = newDonationGR.insert();
					}
					//gs.debug('donation sys_id = ' + donationRecSysId);
					var donationGR2 = new GlideRecord('x_53373_royalapi_clan_donations');
					donationGR2.get(donationRecSysId);
					donationGR2.name = clanMemberSysId;
					if ( members[i].donations > 0 || members[i].donationsReceived > 0){
						donationGR2.donations = parseInt(members[i].donations);
						donationGR2.donations_received = parseInt(members[i].donationsReceived);
					} else {
						donationGR2.donations = 0;
						donationGR2.donations_received = 0;
					}
					donationGR2.week_beginning = weekBeginning;
					donationGR2.update();
				}
			}
		}
		catch(ex) {
			gs.debug(ex.message);
			gs.info("CCK: error = " + ex.message);
		}
		
		//gs.info("CCK: this.currentMembers = " + this.currentMembers + ", this.currentMembers2 = " + this.currentMembers2);
		
	},
	
	getClanWarLog: function(){
		gs.debug("CCK: getClanWarLog: start");
		try {
			var r = new sn_ws.RESTMessageV2('x_53373_royalapi.RoyalAPI', 'Warlog GET');
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			gs.debug("CCK: getClanWarLog: " + httpStatus);
			var clanWarLogArray = JSON.parse(responseBody);
			gs.debug('CCK: number of clan wars = ' + clanWarLogArray.length);
			for ( var i = 0 ; i < clanWarLogArray.length ; i++ ){
				//gs.debug(i + ":" + clanWarLogArray[i]);
				var thisJson = clanWarLogArray[i];
				//gs.debug('created date = ' + thisJson.createdDate);
				var thisParticipants = thisJson.participants;
				
				// convert createdDate
				var clanWarDate = new GlideDateTime();
				clanWarDate.setValue("1970-01-01 00:00:00");
				clanWarDate.addSeconds(thisJson.createdDate);
				
				for ( var j = 0 ; j < thisParticipants.length ; j++) {
					var partipantsJson = thisParticipants[j];
					var member = new GlideRecord('x_53373_royalapi_clan_member');
					member.addEncodedQuery('name=' + partipantsJson.name);
					member.query();
					if ( member.next()){
						//gs.debug("CCK: 1. member.syd_id = " + member.sys_id);
						var clanWarLogGr = new GlideRecord('x_53373_royalapi_clan_war_result');
						clanWarLogGr.addQuery('created_date', thisJson.createdDate);
						//name.tag=2LYGQ2QG
						clanWarLogGr.addEncodedQuery('name.tag=' + partipantsJson.tag);
						gs.debug('name.tag=' + partipantsJson.tag);
						clanWarLogGr.query();

						if ( clanWarLogGr.next()){
							clanWarLogGr.name = member.sys_id;
							clanWarLogGr.cards_earned = partipantsJson.cardsEarned;
							clanWarLogGr.battles_played = partipantsJson.battlesPlayed;
							clanWarLogGr.wins = partipantsJson.wins;
							clanWarLogGr.clan_war_date = clanWarDate ;
							clanWarLogGr.update();
						} else {
							// create the record
							clanWarLogGr.created_date = thisJson.createdDate;
							//clanWarLogGr.tag = partipantsJson.tag;
							//gs.debug("CCK: 2. member.syd_id = " + member.sys_id);
							clanWarLogGr.name = member.sys_id;
							clanWarLogGr.cards_earned = partipantsJson.cardsEarned;
							clanWarLogGr.battles_played = partipantsJson.battlesPlayed;
							clanWarLogGr.wins = partipantsJson.wins;
							clanWarLogGr.clan_war_date = clanWarDate ;
							clanWarLogGr.insert();
						}
					}
				}
				// Get clan standings
				var thisStandings = thisJson.standings;
				for ( var k = 0 ; k < thisStandings.length ; k++){
					var competingClan = thisStandings[k];
					if ( competingClan.tag == 'V2GCC8Y'){
						var clanWarTrophies = new GlideRecord('x_53373_royalapi_clan_war_trophies');
						clanWarTrophies.addQuery('clan_war_date',clanWarDate);
						clanWarTrophies.addQuery('clan_tag','V2GCC8Y');
						clanWarTrophies.query();
						if ( ! clanWarTrophies.next() ){
							var addClanWarTrophiesGr = new GlideRecord('x_53373_royalapi_clan_war_trophies');
							addClanWarTrophiesGr.clan_war_date = clanWarDate;
							addClanWarTrophiesGr.clan_tag = 'V2GCC8Y';
							addClanWarTrophiesGr.position = (k+1);
							addClanWarTrophiesGr.trophies = thisStandings[k].warTrophies;
							addClanWarTrophiesGr.trophy_change = thisStandings[k].warTrophiesChange;
							addClanWarTrophiesGr.insert();
						}
						break;
					}
				}
			}
		}
		catch(ex) {
			var message = ex.message;
			gs.debug("CCK: error in getClanWarLog: " + message);
		}
	},
	
	deactivateOldMembers: function(){
		if ( this.initialGet == true ) {
			var memberGR = new GlideRecord('x_53373_royalapi_clan_member');
			memberGR.addEncodedQuery(this.currentMembers.join("^"));
			memberGR.query();
			memberGR.active = false;
			memberGR.updateMultiple();
		}
		
		/*
		var donationGR = new GlideRecord('x_53373_royalapi_clan_donations');
		donationGR.addEncodedQuery(this.currentMembers2.join("^"));
		donationGR.query();
		// donationGR.deleteMultiple();
		*/
	},
	
	
	type: 'royaleAPIClanExtract'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>chikwong.cheung</sys_created_by>
        <sys_created_on>2018-08-14 14:00:10</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>5517fde3db3313006a54f7fdbf96193a</sys_id>
        <sys_mod_count>124</sys_mod_count>
        <sys_name>royaleAPIClanExtract</sys_name>
        <sys_package display_value="RoyalAPI" source="x_53373_royalapi">6cb47d63db3313006a54f7fdbf9619c5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="RoyalAPI">6cb47d63db3313006a54f7fdbf9619c5</sys_scope>
        <sys_update_name>sys_script_include_5517fde3db3313006a54f7fdbf96193a</sys_update_name>
        <sys_updated_by>chikwong.cheung</sys_updated_by>
        <sys_updated_on>2018-12-16 16:32:03</sys_updated_on>
    </sys_script_include>
</record_update>
